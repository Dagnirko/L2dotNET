using System.Collections.Generic;

namespace L2dotNET.Models.Stats
{
    public class Stats
    {
        public static readonly Stat MaxHp = new Stat("maxhp");
        public static readonly Stat MaxMp = new Stat("maxmp");
        public static readonly Stat MaxCp = new Stat("maxcp");
        public static readonly Stat RegenerateHpRate = new Stat("reghp");
        public static readonly Stat RegenerateCpRate = new Stat("regcp");
        public static readonly Stat RegenerateMpRate = new Stat("regmp");
        public static readonly Stat RechargeMpRate = new Stat("gainmp");
        public static readonly Stat HealEffectivness = new Stat("gainhp");
        public static readonly Stat HealProficiency = new Stat("givehp");
        public static readonly Stat PowerDefence = new Stat("pdef");
        public static readonly Stat MagicDefence = new Stat("mdef");
        public static readonly Stat PowerAttack = new Stat("patk");
        public static readonly Stat MagicAttack = new Stat("matk");
        public static readonly Stat PowerAttackSpeed = new Stat("patkspd");
        public static readonly Stat MagicAttackSpeed = new Stat("matkspd");
        public static readonly Stat MagicReuseRate = new Stat("mreuse");
        public static readonly Stat PReuse = new Stat("preuse");
        public static readonly Stat ShieldDefence = new Stat("sdef");
        public static readonly Stat ShieldDefenceAngle = new Stat("shielddefangle");
        public static readonly Stat ShieldRate = new Stat("rshld");
        public static readonly Stat CriticalDamage = new Stat("catk");
        public static readonly Stat CriticalDamageAdd = new Stat("catkadd");
        public static readonly Stat PvpPhysicalDmg = new Stat("pvpphysdmg");
        public static readonly Stat PvpMagicalDmg = new Stat("pvpmagicaldmg");
        public static readonly Stat PvpPhysSkillDmg = new Stat("pvpphysskillsdmg");
        public static readonly Stat PvpPhysSkillDef = new Stat("pvpphysskillsdef");
        public static readonly Stat EvasionRate = new Stat("revas");
        public static readonly Stat PSkillEvasion = new Stat("pskillevas");
        public static readonly Stat CriticalRate = new Stat("rcrit");
        public static readonly Stat BlowRate = new Stat("blowrate");
        public static readonly Stat LethalRate = new Stat("lethalrate");
        public static readonly Stat McriticalRate = new Stat("mcritrate");
        public static readonly Stat AttackCancel = new Stat("cancel");
        public static readonly Stat AccuracyCombat = new Stat("acccombat");
        public static readonly Stat PowerAttackRange = new Stat("patkrange");
        public static readonly Stat PowerAttackAngle = new Stat("patkangle");
        public static readonly Stat AttackCountMax = new Stat("atkcountmax");
        public static readonly Stat RunSpeed = new Stat("runspd");
        public static readonly Stat StatStr = new Stat("str");
        public static readonly Stat StatCon = new Stat("con");
        public static readonly Stat StatDex = new Stat("dex");
        public static readonly Stat StatInt = new Stat("int");
        public static readonly Stat StatWit = new Stat("wit");
        public static readonly Stat StatMen = new Stat("men");
        public static readonly Stat Breath = new Stat("breath");
        public static readonly Stat Fall = new Stat("fall");
        public static readonly Stat Aggression = new Stat("aggression");
        public static readonly Stat Bleed = new Stat("bleed");
        public static readonly Stat Poison = new Stat("poison");
        public static readonly Stat Stun = new Stat("stun");
        public static readonly Stat Root = new Stat("root");
        public static readonly Stat Movement = new Stat("movement");
        public static readonly Stat Confusion = new Stat("confusion");
        public static readonly Stat Sleep = new Stat("sleep");
        public static readonly Stat Valakas = new Stat("valakas");
        public static readonly Stat ValakasRes = new Stat("valakasres");
        public static readonly Stat FireRes = new Stat("fireres");
        public static readonly Stat WaterRes = new Stat("waterres");
        public static readonly Stat WindRes = new Stat("windres");
        public static readonly Stat EarthRes = new Stat("earthres");
        public static readonly Stat HolyRes = new Stat("holyres");
        public static readonly Stat DarkRes = new Stat("darkres");
        public static readonly Stat FirePower = new Stat("firepower");
        public static readonly Stat WaterPower = new Stat("waterpower");
        public static readonly Stat WindPower = new Stat("windpower");
        public static readonly Stat EarthPower = new Stat("earthpower");
        public static readonly Stat HolyPower = new Stat("holypower");
        public static readonly Stat DarkPower = new Stat("darkpower");
        public static readonly Stat BleedVuln = new Stat("bleedvuln");
        public static readonly Stat PoisonVuln = new Stat("poisonvuln");
        public static readonly Stat StunVuln = new Stat("stunvuln");
        public static readonly Stat ParalyzeVuln = new Stat("paralyzevuln");
        public static readonly Stat RootVuln = new Stat("rootvuln");
        public static readonly Stat SleepVuln = new Stat("sleepvuln");
        public static readonly Stat DamageZoneVuln = new Stat("damagezonevuln");
        public static readonly Stat CritVuln = new Stat("critvuln");
        public static readonly Stat CancelVuln = new Stat("cancelvuln");
        public static readonly Stat DerangementVuln = new Stat("derangementvuln");
        public static readonly Stat DebuffVuln = new Stat("debuffvuln");
        public static readonly Stat SwordWpnVuln = new Stat("swordwpnvuln");
        public static readonly Stat BluntWpnVuln = new Stat("bluntwpnvuln");
        public static readonly Stat DaggerWpnVuln = new Stat("daggerwpnvuln");
        public static readonly Stat BowWpnVuln = new Stat("bowwpnvuln");
        public static readonly Stat PoleWpnVuln = new Stat("polewpnvuln");
        public static readonly Stat DualWpnVuln = new Stat("dualwpnvuln");
        public static readonly Stat DualfistWpnVuln = new Stat("dualfistwpnvuln");
        public static readonly Stat BigswordWpnVuln = new Stat("bigswordwpnvuln");
        public static readonly Stat BigbluntWpnVuln = new Stat("bigbluntwpnvuln");
        public static readonly Stat ReflectDamagePercent = new Stat("reflectdam");
        public static readonly Stat ReflectSkillMagic = new Stat("reflectskillmagic");
        public static readonly Stat ReflectSkillPhysic = new Stat("reflectskillphysic");
        public static readonly Stat VengeanceSkillMagicDamage = new Stat("vengeancemdam");
        public static readonly Stat VengeanceSkillPhysicalDamage = new Stat("vengeancepdam");
        public static readonly Stat AbsorbDamagePercent = new Stat("absorbdam");
        public static readonly Stat TransferDamagePercent = new Stat("transdam");
        public static readonly Stat PatkPlants = new Stat("patk-plants");
        public static readonly Stat PatkInsects = new Stat("patk-insects");
        public static readonly Stat PatkAnimals = new Stat("patk-animals");
        public static readonly Stat PatkMonsters = new Stat("patk-monsters");
        public static readonly Stat PatkDragons = new Stat("patk-dragons");
        public static readonly Stat PatkGiants = new Stat("patk-giants");
        public static readonly Stat PatkMcreatures = new Stat("patk-magiccreature");
        public static readonly Stat PdefPlants = new Stat("pdef-plants");
        public static readonly Stat PdefInsects = new Stat("pdef-insects");
        public static readonly Stat PdefAnimals = new Stat("pdef-animals");
        public static readonly Stat PdefMonsters = new Stat("pdef-monsters");
        public static readonly Stat PdefDragons = new Stat("pdef-dragons");
        public static readonly Stat PdefGiants = new Stat("pdef-giants");
        public static readonly Stat PdefMcreatures = new Stat("pdef-magiccreature");
        public static readonly Stat MaxLoad = new Stat("maxload");
        public static readonly Stat InvLim = new Stat("inventorylimit");
        public static readonly Stat WhLim = new Stat("whlimit");
        public static readonly Stat FreightLim = new Stat("freightlimit");
        public static readonly Stat PSellLim = new Stat("privateselllimit");
        public static readonly Stat PBuyLim = new Stat("privatebuylimit");
        public static readonly Stat RecDLim = new Stat("dwarfrecipelimit");
        public static readonly Stat RecCLim = new Stat("commonrecipelimit");
        public static readonly Stat PhysicalMpConsumeRate = new Stat("physicalmpconsumerate");
        public static readonly Stat MagicalMpConsumeRate = new Stat("magicalmpconsumerate");
        public static readonly Stat DanceMpConsumeRate = new Stat("dancempconsumerate");
        public static readonly Stat SkillMastery = new Stat("skillmastery");

        public static IEnumerable<Stat> Values
        {
            get
            {
                yield return MaxHp;
                yield return MaxMp;
                yield return MaxCp;
                yield return RegenerateHpRate;
                yield return RegenerateCpRate;
                yield return RegenerateMpRate;
                yield return RechargeMpRate;
                yield return HealEffectivness;
                yield return HealProficiency;
                yield return PowerDefence;
                yield return MagicDefence;
                yield return PowerAttack;
                yield return MagicAttack;
                yield return PowerAttackSpeed;
                yield return MagicAttackSpeed;
                yield return MagicReuseRate;
                yield return PReuse;
                yield return ShieldDefence;
                yield return ShieldDefenceAngle;
                yield return ShieldRate;
                yield return CriticalDamage;
                yield return CriticalDamageAdd;
                yield return PvpPhysicalDmg;
                yield return PvpMagicalDmg;
                yield return PvpPhysSkillDmg;
                yield return PvpPhysSkillDef;
                yield return EvasionRate;
                yield return PSkillEvasion;
                yield return CriticalRate;
                yield return BlowRate;
                yield return LethalRate;
                yield return McriticalRate;
                yield return AttackCancel;
                yield return AccuracyCombat;
                yield return PowerAttackRange;
                yield return PowerAttackAngle;
                yield return AttackCountMax;
                yield return RunSpeed;
                yield return StatStr;
                yield return StatCon;
                yield return StatDex;
                yield return StatInt;
                yield return StatWit;
                yield return StatMen;
                yield return Breath;
                yield return Fall;
                yield return Aggression;
                yield return Bleed;
                yield return Poison;
                yield return Stun;
                yield return Root;
                yield return Movement;
                yield return Confusion;
                yield return Sleep;
                yield return Valakas;
                yield return ValakasRes;
                yield return FireRes;
                yield return WaterRes;
                yield return WindRes;
                yield return EarthRes;
                yield return HolyRes;
                yield return DarkRes;
                yield return FirePower;
                yield return WaterPower;
                yield return WindPower;
                yield return EarthPower;
                yield return HolyPower;
                yield return DarkPower;
                yield return BleedVuln;
                yield return PoisonVuln;
                yield return StunVuln;
                yield return ParalyzeVuln;
                yield return RootVuln;
                yield return SleepVuln;
                yield return DamageZoneVuln;
                yield return CritVuln;
                yield return CancelVuln;
                yield return DerangementVuln;
                yield return DebuffVuln;
                yield return SwordWpnVuln;
                yield return BluntWpnVuln;
                yield return DaggerWpnVuln;
                yield return BowWpnVuln;
                yield return PoleWpnVuln;
                yield return DualWpnVuln;
                yield return DualfistWpnVuln;
                yield return BigswordWpnVuln;
                yield return BigbluntWpnVuln;
                yield return ReflectDamagePercent;
                yield return ReflectSkillMagic;
                yield return ReflectSkillPhysic;
                yield return VengeanceSkillMagicDamage;
                yield return VengeanceSkillPhysicalDamage;
                yield return AbsorbDamagePercent;
                yield return TransferDamagePercent;
                yield return PatkPlants;
                yield return PatkInsects;
                yield return PatkAnimals;
                yield return PatkMonsters;
                yield return PatkDragons;
                yield return PatkGiants;
                yield return PatkMcreatures;
                yield return PdefPlants;
                yield return PdefInsects;
                yield return PdefAnimals;
                yield return PdefMonsters;
                yield return PdefDragons;
                yield return PdefGiants;
                yield return PdefMcreatures;
                yield return MaxLoad;
                yield return InvLim;
                yield return WhLim;
                yield return FreightLim;
                yield return PSellLim;
                yield return PBuyLim;
                yield return RecDLim;
                yield return RecCLim;
                yield return PhysicalMpConsumeRate;
                yield return MagicalMpConsumeRate;
                yield return DanceMpConsumeRate;
                yield return SkillMastery;
            }
        }
    }

    public class Stat
    {
        public string StatName { get; set; }

        public Stat(string statName)
        {
            StatName = statName;
        }
    }
}